{"ast":null,"code":"import { createApi } from \"@reduxjs/toolkit/dist/query\";\nexport const linktreeApi = createApi({\n  reducerPath: \"linktreeApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://localhost:8000\",\n    credentials: \"include\"\n  }),\n  endpoints: builder => ({\n    signup: builder.mutation({\n      query: body => ({\n        url: \"/api/accounts\",\n        method: \"POST\",\n        body,\n        credentials: \"include\"\n      }),\n      invalidatesTags: [\"Account\"]\n    }),\n    login: builder.mutation({\n      query: _ref => {\n        let {\n          username,\n          password\n        } = _ref;\n        const body = new FormData();\n        body.append(\"username\", username);\n        body.append(\"password\", password);\n        return {\n          url: \"/token\",\n          method: \"POST\",\n          body,\n          credentials: \"include\"\n        };\n      },\n      invalidatesTags: [\"Account\"]\n    }),\n    getAccount: builder.query({\n      query: () => ({\n        url: '/token',\n        credentials: \"include\"\n      })\n    })\n  })\n});","map":{"version":3,"names":["createApi","linktreeApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","credentials","endpoints","builder","signup","mutation","query","body","url","method","invalidatesTags","login","username","password","FormData","append","getAccount"],"sources":["/app/src/app/apiSlice.js"],"sourcesContent":["import { createApi } from \"@reduxjs/toolkit/dist/query\";\n\nexport const linktreeApi = createApi({\n    reducerPath: \"linktreeApi\",\n    baseQuery: fetchBaseQuery({\n        baseUrl: \"https://localhost:8000\",\n        credentials: \"include\"\n    }),\n    endpoints: (builder) => ({\n        signup: builder.mutation({\n            query: (body) => ({\n                url: \"/api/accounts\",\n                method: \"POST\",\n                body,\n                credentials: \"include\",\n            }),\n            invalidatesTags: [\"Account\"]\n        }),\n        login: builder.mutation({\n            query: ({ username, password }) => {\n                const body = new FormData()\n                body.append(\"username\", username)\n                body.append(\"password\", password)\n                return {\n                    url: \"/token\",\n                    method: \"POST\",\n                    body,\n                    credentials: \"include\",\n                }\n            },\n            invalidatesTags: [\"Account\"]\n        }),\n        getAccount: builder.query({\n            query: () => ({\n                url: '/token',\n                credentials: \"include\",\n            })\n        })\n    })\n})"],"mappings":"AAAA,SAASA,SAAT,QAA0B,6BAA1B;AAEA,OAAO,MAAMC,WAAW,GAAGD,SAAS,CAAC;EACjCE,WAAW,EAAE,aADoB;EAEjCC,SAAS,EAAEC,cAAc,CAAC;IACtBC,OAAO,EAAE,wBADa;IAEtBC,WAAW,EAAE;EAFS,CAAD,CAFQ;EAMjCC,SAAS,EAAGC,OAAD,KAAc;IACrBC,MAAM,EAAED,OAAO,CAACE,QAAR,CAAiB;MACrBC,KAAK,EAAGC,IAAD,KAAW;QACdC,GAAG,EAAE,eADS;QAEdC,MAAM,EAAE,MAFM;QAGdF,IAHc;QAIdN,WAAW,EAAE;MAJC,CAAX,CADc;MAOrBS,eAAe,EAAE,CAAC,SAAD;IAPI,CAAjB,CADa;IAUrBC,KAAK,EAAER,OAAO,CAACE,QAAR,CAAiB;MACpBC,KAAK,EAAE,QAA4B;QAAA,IAA3B;UAAEM,QAAF;UAAYC;QAAZ,CAA2B;QAC/B,MAAMN,IAAI,GAAG,IAAIO,QAAJ,EAAb;QACAP,IAAI,CAACQ,MAAL,CAAY,UAAZ,EAAwBH,QAAxB;QACAL,IAAI,CAACQ,MAAL,CAAY,UAAZ,EAAwBF,QAAxB;QACA,OAAO;UACHL,GAAG,EAAE,QADF;UAEHC,MAAM,EAAE,MAFL;UAGHF,IAHG;UAIHN,WAAW,EAAE;QAJV,CAAP;MAMH,CAXmB;MAYpBS,eAAe,EAAE,CAAC,SAAD;IAZG,CAAjB,CAVc;IAwBrBM,UAAU,EAAEb,OAAO,CAACG,KAAR,CAAc;MACtBA,KAAK,EAAE,OAAO;QACVE,GAAG,EAAE,QADK;QAEVP,WAAW,EAAE;MAFH,CAAP;IADe,CAAd;EAxBS,CAAd;AANsB,CAAD,CAA7B"},"metadata":{},"sourceType":"module"}